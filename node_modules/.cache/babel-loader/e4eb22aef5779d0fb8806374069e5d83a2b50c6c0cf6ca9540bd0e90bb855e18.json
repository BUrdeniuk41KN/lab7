{"ast":null,"code":"const initialState = {\n  toggleTraficType: false,\n  colorNowSelected: \"red\",\n  redColor: {\n    coutntActive: 0,\n    activeNow: true\n  },\n  yelowColor: {\n    coutntActive: 0,\n    activeNow: false\n  },\n  greenColor: {\n    coutntActive: 0,\n    activeNow: false\n  }\n};\nconst StatusBarState = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CANGE_STATE_TYPE':\n      return {\n        ...state,\n        toggleTraficType: state.toggleTraficType === false ? true : false\n      };\n    case 'CHANGE_STATE_COLOR':\n      switch (action.colorHendle) {\n        case \"red\":\n          return {\n            ...state,\n            colorNowSelected: action.colorHendle,\n            redColor: {\n              ...state.redColor,\n              coutntActive: state.redColor.coutntActive + 1,\n              activeNow: state.redColor.activeNow = true\n            },\n            yelowColor: {\n              ...state.yelowColor,\n              activeNow: state.yelowColor.activeNow = false\n            },\n            greenColor: {\n              ...state.greenColor,\n              activeNow: state.greenColor.activeNow = false\n            }\n          };\n        case \"yelow\":\n          return {\n            ...state,\n            colorNowSelected: action.colorHendle,\n            redColor: {\n              ...state.redColor,\n              activeNow: state.redColor.activeNow = false\n            },\n            yelowColor: {\n              ...state.yelowColor,\n              coutntActive: state.yelowColor.coutntActive + 1,\n              activeNow: state.yelowColor.activeNow = true\n            },\n            greenColor: {\n              ...state.greenColor,\n              activeNow: state.greenColor.activeNow = false\n            }\n          };\n        case \"green\":\n          return {\n            ...state,\n            colorNowSelected: action.colorHendle,\n            redColor: {\n              ...state.redColor,\n              activeNow: state.redColor.activeNow = false\n            },\n            yelowColor: {\n              ...state.yelowColor,\n              activeNow: state.yelowColor.activeNow = false\n            },\n            greenColor: {\n              ...state.greenColor,\n              coutntActive: state.greenColor.coutntActive + 1,\n              activeNow: state.greenColor.activeNow = true\n            }\n          };\n      }\n      return {};\n    default:\n      return state;\n  }\n};\n_c = StatusBarState;\nexport default StatusBarState;\nvar _c;\n$RefreshReg$(_c, \"StatusBarState\");","map":{"version":3,"names":["initialState","toggleTraficType","colorNowSelected","redColor","coutntActive","activeNow","yelowColor","greenColor","StatusBarState","state","action","type","colorHendle","_c","$RefreshReg$"],"sources":["/home/hatsumi/labs/web-laba7-BUrdeniuk41KN/src/Components/StatusBar/reducerBar.jsx"],"sourcesContent":["const initialState = {\n    toggleTraficType: false,\n    colorNowSelected: \"red\",\n    redColor: {\n      coutntActive: 0,\n      activeNow: true\n    },\n    yelowColor: {\n      coutntActive: 0,\n      activeNow: false\n    },\n    greenColor: {\n      coutntActive: 0,\n      activeNow: false\n    }\n  };\n\nconst StatusBarState = (state = initialState, action) => {\n    switch (action.type) {\n      case 'CANGE_STATE_TYPE':\n        return { ...state, toggleTraficType: state.toggleTraficType === false ? true : false };\n      case 'CHANGE_STATE_COLOR':\n        switch (action.colorHendle){\n          case \"red\":\n            \n            return {...state,\n              colorNowSelected: action.colorHendle, \n              redColor: {...state.redColor, \n                coutntActive: state.redColor.coutntActive + 1,\n                activeNow: state.redColor.activeNow = true\n              }, \n              yelowColor: {...state.yelowColor, \n                activeNow: state.yelowColor.activeNow = false\n              }, \n              greenColor: {...state.greenColor, \n                activeNow: state.greenColor.activeNow = false\n              }};\n          case \"yelow\":\n              return {...state,\n                colorNowSelected: action.colorHendle, \n                redColor: {...state.redColor, \n                  activeNow: state.redColor.activeNow = false\n                }, \n                yelowColor: {...state.yelowColor, \n                  coutntActive: state.yelowColor.coutntActive + 1,\n                  activeNow: state.yelowColor.activeNow = true\n                }, \n                greenColor: {...state.greenColor, \n                  activeNow: state.greenColor.activeNow = false\n                }};\n\n          case \"green\":\n              return {...state,\n                colorNowSelected: action.colorHendle, \n                redColor: {...state.redColor, \n                  activeNow: state.redColor.activeNow = false\n                }, \n                yelowColor: {...state.yelowColor, \n                  activeNow: state.yelowColor.activeNow = false\n                }, \n                greenColor: {...state.greenColor, \n                  coutntActive: state.greenColor.coutntActive + 1,\n                  activeNow: state.greenColor.activeNow = true\n                }};\n            \n          \n        }\n        return {};\n      default:\n        return state;\n    }\n  };\n  \n  export default StatusBarState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}